Terminals unused in grammar

   KW_FOR
   TOKEN_ERROR


State 62 conflicts: 3 reduce/reduce
State 73 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 143 conflicts: 13 shift/reduce
State 146 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl

    2 decl: dec decl
    3     | %empty

    4 dec: vardec
    5    | fundec

    6 vardec: TK_IDENTIFIER ':' vartypeandlist

    7 vartypeandlist: KW_BYTE '=' LIT_CHAR ';'
    8               | KW_BYTE '=' LIT_INTEGER ';'
    9               | KW_SHORT '=' LIT_INTEGER ';'
   10               | KW_LONG '=' LIT_INTEGER ';'
   11               | KW_FLOAT '=' LIT_REAL ';'
   12               | KW_DOUBLE '=' LIT_INTEGER ';'
   13               | KW_BYTE '[' LIT_INTEGER ']' charlist
   14               | KW_BYTE '[' LIT_INTEGER ']' intlist
   15               | KW_SHORT '[' LIT_INTEGER ']' intlist
   16               | KW_LONG '[' LIT_INTEGER ']' intlist
   17               | KW_FLOAT '[' LIT_INTEGER ']' reallist
   18               | KW_DOUBLE '[' LIT_INTEGER ']' intlist

   19 charlist: LIT_CHAR charlist
   20         | ';'

   21 intlist: LIT_INTEGER intlist
   22        | ';'

   23 reallist: LIT_REAL reallist
   24         | ';'

   25 fundec: '(' vartype ')' TK_IDENTIFIER '(' argsdef ')' cmd

   26 args: exp ',' args
   27     | exp args
   28     | %empty

   29 argsdef: TK_IDENTIFIER ':' vartype ',' argsdef
   30        | TK_IDENTIFIER ':' vartype argsdef
   31        | %empty

   32 vartype: KW_BYTE
   33        | KW_SHORT
   34        | KW_LONG
   35        | KW_FLOAT
   36        | KW_DOUBLE

   37 cmd: atrib
   38    | KW_PRINT printargs
   39    | KW_READ '>' TK_IDENTIFIER
   40    | KW_WHILE '(' exp ')' cmd
   41    | KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd
   42    | KW_IF '(' exp ')' KW_THEN cmd
   43    | KW_RETURN '(' exp ')'
   44    | block
   45    | %empty

   46 printargs: LIT_STRING ',' printargs
   47          | exp ',' printargs
   48          | LIT_STRING
   49          | exp

   50 atrib: TK_IDENTIFIER '=' exp
   51      | TK_IDENTIFIER '[' exp ']' '=' exp

   52 exp: '(' exp ')'
   53    | TK_IDENTIFIER
   54    | TK_IDENTIFIER '[' exp ']'
   55    | TK_IDENTIFIER '(' args ')'
   56    | LIT_INTEGER
   57    | LIT_CHAR
   58    | LIT_REAL
   59    | exp op exp

   60 op: OPERATOR_LE
   61   | OPERATOR_GE
   62   | OPERATOR_EQ
   63   | OPERATOR_NE
   64   | OPERATOR_AND
   65   | OPERATOR_OR
   66   | '*'
   67   | '/'
   68   | '+'
   69   | '-'
   70   | '>'
   71   | '<'
   72   | '!'

   73 block: '{' lcmd '}'

   74 lcmd: lcmd cmd ';'
   75     | %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33) 72
'(' (40) 25 40 41 42 43 52 55
')' (41) 25 40 41 42 43 52 55
'*' (42) 66
'+' (43) 68
',' (44) 26 29 46 47
'-' (45) 69
'/' (47) 67
':' (58) 6 29 30
';' (59) 7 8 9 10 11 12 20 22 24 74
'<' (60) 71
'=' (61) 7 8 9 10 11 12 50 51
'>' (62) 39 70
'[' (91) 13 14 15 16 17 18 51 54
']' (93) 13 14 15 16 17 18 51 54
'{' (123) 73
'}' (125) 73
KW_BYTE (256) 7 8 13 14 32
KW_SHORT (257) 9 15 33
KW_LONG (258) 10 16 34
KW_FLOAT (259) 11 17 35
KW_DOUBLE (260) 12 18 36
KW_IF (261) 41 42
KW_THEN (262) 41 42
KW_ELSE (263) 41
KW_WHILE (264) 40
KW_FOR (265)
KW_READ (266) 39
KW_RETURN (267) 43
KW_PRINT (268) 38
OPERATOR_LE (270) 60
OPERATOR_GE (271) 61
OPERATOR_EQ (272) 62
OPERATOR_NE (273) 63
OPERATOR_AND (274) 64
OPERATOR_OR (275) 65
TK_IDENTIFIER (280) 6 25 29 30 39 50 51 53 54 55
LIT_INTEGER (281) 8 9 10 12 13 14 15 16 17 18 21 56
LIT_REAL (282) 11 23 58
LIT_CHAR (285) 7 19 57
LIT_STRING (286) 46 48
TOKEN_ERROR (290)
error (291)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
decl (47)
    on left: 2 3, on right: 1 2
dec (48)
    on left: 4 5, on right: 2
vardec (49)
    on left: 6, on right: 4
vartypeandlist (50)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18, on right: 6
charlist (51)
    on left: 19 20, on right: 13 19
intlist (52)
    on left: 21 22, on right: 14 15 16 18 21
reallist (53)
    on left: 23 24, on right: 17 23
fundec (54)
    on left: 25, on right: 5
args (55)
    on left: 26 27 28, on right: 26 27 55
argsdef (56)
    on left: 29 30 31, on right: 25 29 30
vartype (57)
    on left: 32 33 34 35 36, on right: 25 29 30
cmd (58)
    on left: 37 38 39 40 41 42 43 44 45, on right: 25 40 41 42 74
printargs (59)
    on left: 46 47 48 49, on right: 38 46 47
atrib (60)
    on left: 50 51, on right: 37
exp (61)
    on left: 52 53 54 55 56 57 58 59, on right: 26 27 40 41 42 43 47
    49 50 51 52 54 59
op (62)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72, on right: 59
block (63)
    on left: 73, on right: 44
lcmd (64)
    on left: 74 75, on right: 73 74


State 0

    0 $accept: . program $end

    TK_IDENTIFIER  shift, and go to state 1
    '('            shift, and go to state 2

    $default  reduce using rule 3 (decl)

    program  go to state 3
    decl     go to state 4
    dec      go to state 5
    vardec   go to state 6
    fundec   go to state 7


State 1

    6 vardec: TK_IDENTIFIER . ':' vartypeandlist

    ':'  shift, and go to state 8


State 2

   25 fundec: '(' . vartype ')' TK_IDENTIFIER '(' argsdef ')' cmd

    KW_BYTE    shift, and go to state 9
    KW_SHORT   shift, and go to state 10
    KW_LONG    shift, and go to state 11
    KW_FLOAT   shift, and go to state 12
    KW_DOUBLE  shift, and go to state 13

    vartype  go to state 14


State 3

    0 $accept: program . $end

    $end  shift, and go to state 15


State 4

    1 program: decl .

    $default  reduce using rule 1 (program)


State 5

    2 decl: dec . decl

    TK_IDENTIFIER  shift, and go to state 1
    '('            shift, and go to state 2

    $default  reduce using rule 3 (decl)

    decl    go to state 16
    dec     go to state 5
    vardec  go to state 6
    fundec  go to state 7


State 6

    4 dec: vardec .

    $default  reduce using rule 4 (dec)


State 7

    5 dec: fundec .

    $default  reduce using rule 5 (dec)


State 8

    6 vardec: TK_IDENTIFIER ':' . vartypeandlist

    KW_BYTE    shift, and go to state 17
    KW_SHORT   shift, and go to state 18
    KW_LONG    shift, and go to state 19
    KW_FLOAT   shift, and go to state 20
    KW_DOUBLE  shift, and go to state 21

    vartypeandlist  go to state 22


State 9

   32 vartype: KW_BYTE .

    $default  reduce using rule 32 (vartype)


State 10

   33 vartype: KW_SHORT .

    $default  reduce using rule 33 (vartype)


State 11

   34 vartype: KW_LONG .

    $default  reduce using rule 34 (vartype)


State 12

   35 vartype: KW_FLOAT .

    $default  reduce using rule 35 (vartype)


State 13

   36 vartype: KW_DOUBLE .

    $default  reduce using rule 36 (vartype)


State 14

   25 fundec: '(' vartype . ')' TK_IDENTIFIER '(' argsdef ')' cmd

    ')'  shift, and go to state 23


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 decl: dec decl .

    $default  reduce using rule 2 (decl)


State 17

    7 vartypeandlist: KW_BYTE . '=' LIT_CHAR ';'
    8               | KW_BYTE . '=' LIT_INTEGER ';'
   13               | KW_BYTE . '[' LIT_INTEGER ']' charlist
   14               | KW_BYTE . '[' LIT_INTEGER ']' intlist

    '='  shift, and go to state 24
    '['  shift, and go to state 25


State 18

    9 vartypeandlist: KW_SHORT . '=' LIT_INTEGER ';'
   15               | KW_SHORT . '[' LIT_INTEGER ']' intlist

    '='  shift, and go to state 26
    '['  shift, and go to state 27


State 19

   10 vartypeandlist: KW_LONG . '=' LIT_INTEGER ';'
   16               | KW_LONG . '[' LIT_INTEGER ']' intlist

    '='  shift, and go to state 28
    '['  shift, and go to state 29


State 20

   11 vartypeandlist: KW_FLOAT . '=' LIT_REAL ';'
   17               | KW_FLOAT . '[' LIT_INTEGER ']' reallist

    '='  shift, and go to state 30
    '['  shift, and go to state 31


State 21

   12 vartypeandlist: KW_DOUBLE . '=' LIT_INTEGER ';'
   18               | KW_DOUBLE . '[' LIT_INTEGER ']' intlist

    '='  shift, and go to state 32
    '['  shift, and go to state 33


State 22

    6 vardec: TK_IDENTIFIER ':' vartypeandlist .

    $default  reduce using rule 6 (vardec)


State 23

   25 fundec: '(' vartype ')' . TK_IDENTIFIER '(' argsdef ')' cmd

    TK_IDENTIFIER  shift, and go to state 34


State 24

    7 vartypeandlist: KW_BYTE '=' . LIT_CHAR ';'
    8               | KW_BYTE '=' . LIT_INTEGER ';'

    LIT_INTEGER  shift, and go to state 35
    LIT_CHAR     shift, and go to state 36


State 25

   13 vartypeandlist: KW_BYTE '[' . LIT_INTEGER ']' charlist
   14               | KW_BYTE '[' . LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 37


State 26

    9 vartypeandlist: KW_SHORT '=' . LIT_INTEGER ';'

    LIT_INTEGER  shift, and go to state 38


State 27

   15 vartypeandlist: KW_SHORT '[' . LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 39


State 28

   10 vartypeandlist: KW_LONG '=' . LIT_INTEGER ';'

    LIT_INTEGER  shift, and go to state 40


State 29

   16 vartypeandlist: KW_LONG '[' . LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 41


State 30

   11 vartypeandlist: KW_FLOAT '=' . LIT_REAL ';'

    LIT_REAL  shift, and go to state 42


State 31

   17 vartypeandlist: KW_FLOAT '[' . LIT_INTEGER ']' reallist

    LIT_INTEGER  shift, and go to state 43


State 32

   12 vartypeandlist: KW_DOUBLE '=' . LIT_INTEGER ';'

    LIT_INTEGER  shift, and go to state 44


State 33

   18 vartypeandlist: KW_DOUBLE '[' . LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 45


State 34

   25 fundec: '(' vartype ')' TK_IDENTIFIER . '(' argsdef ')' cmd

    '('  shift, and go to state 46


State 35

    8 vartypeandlist: KW_BYTE '=' LIT_INTEGER . ';'

    ';'  shift, and go to state 47


State 36

    7 vartypeandlist: KW_BYTE '=' LIT_CHAR . ';'

    ';'  shift, and go to state 48


State 37

   13 vartypeandlist: KW_BYTE '[' LIT_INTEGER . ']' charlist
   14               | KW_BYTE '[' LIT_INTEGER . ']' intlist

    ']'  shift, and go to state 49


State 38

    9 vartypeandlist: KW_SHORT '=' LIT_INTEGER . ';'

    ';'  shift, and go to state 50


State 39

   15 vartypeandlist: KW_SHORT '[' LIT_INTEGER . ']' intlist

    ']'  shift, and go to state 51


State 40

   10 vartypeandlist: KW_LONG '=' LIT_INTEGER . ';'

    ';'  shift, and go to state 52


State 41

   16 vartypeandlist: KW_LONG '[' LIT_INTEGER . ']' intlist

    ']'  shift, and go to state 53


State 42

   11 vartypeandlist: KW_FLOAT '=' LIT_REAL . ';'

    ';'  shift, and go to state 54


State 43

   17 vartypeandlist: KW_FLOAT '[' LIT_INTEGER . ']' reallist

    ']'  shift, and go to state 55


State 44

   12 vartypeandlist: KW_DOUBLE '=' LIT_INTEGER . ';'

    ';'  shift, and go to state 56


State 45

   18 vartypeandlist: KW_DOUBLE '[' LIT_INTEGER . ']' intlist

    ']'  shift, and go to state 57


State 46

   25 fundec: '(' vartype ')' TK_IDENTIFIER '(' . argsdef ')' cmd

    TK_IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 31 (argsdef)

    argsdef  go to state 59


State 47

    8 vartypeandlist: KW_BYTE '=' LIT_INTEGER ';' .

    $default  reduce using rule 8 (vartypeandlist)


State 48

    7 vartypeandlist: KW_BYTE '=' LIT_CHAR ';' .

    $default  reduce using rule 7 (vartypeandlist)


State 49

   13 vartypeandlist: KW_BYTE '[' LIT_INTEGER ']' . charlist
   14               | KW_BYTE '[' LIT_INTEGER ']' . intlist

    LIT_INTEGER  shift, and go to state 60
    LIT_CHAR     shift, and go to state 61
    ';'          shift, and go to state 62

    charlist  go to state 63
    intlist   go to state 64


State 50

    9 vartypeandlist: KW_SHORT '=' LIT_INTEGER ';' .

    $default  reduce using rule 9 (vartypeandlist)


State 51

   15 vartypeandlist: KW_SHORT '[' LIT_INTEGER ']' . intlist

    LIT_INTEGER  shift, and go to state 60
    ';'          shift, and go to state 65

    intlist  go to state 66


State 52

   10 vartypeandlist: KW_LONG '=' LIT_INTEGER ';' .

    $default  reduce using rule 10 (vartypeandlist)


State 53

   16 vartypeandlist: KW_LONG '[' LIT_INTEGER ']' . intlist

    LIT_INTEGER  shift, and go to state 60
    ';'          shift, and go to state 65

    intlist  go to state 67


State 54

   11 vartypeandlist: KW_FLOAT '=' LIT_REAL ';' .

    $default  reduce using rule 11 (vartypeandlist)


State 55

   17 vartypeandlist: KW_FLOAT '[' LIT_INTEGER ']' . reallist

    LIT_REAL  shift, and go to state 68
    ';'       shift, and go to state 69

    reallist  go to state 70


State 56

   12 vartypeandlist: KW_DOUBLE '=' LIT_INTEGER ';' .

    $default  reduce using rule 12 (vartypeandlist)


State 57

   18 vartypeandlist: KW_DOUBLE '[' LIT_INTEGER ']' . intlist

    LIT_INTEGER  shift, and go to state 60
    ';'          shift, and go to state 65

    intlist  go to state 71


State 58

   29 argsdef: TK_IDENTIFIER . ':' vartype ',' argsdef
   30        | TK_IDENTIFIER . ':' vartype argsdef

    ':'  shift, and go to state 72


State 59

   25 fundec: '(' vartype ')' TK_IDENTIFIER '(' argsdef . ')' cmd

    ')'  shift, and go to state 73


State 60

   21 intlist: LIT_INTEGER . intlist

    LIT_INTEGER  shift, and go to state 60
    ';'          shift, and go to state 65

    intlist  go to state 74


State 61

   19 charlist: LIT_CHAR . charlist

    LIT_CHAR  shift, and go to state 61
    ';'       shift, and go to state 75

    charlist  go to state 76


State 62

   20 charlist: ';' .
   22 intlist: ';' .

    $end           reduce using rule 20 (charlist)
    $end           [reduce using rule 22 (intlist)]
    TK_IDENTIFIER  reduce using rule 20 (charlist)
    TK_IDENTIFIER  [reduce using rule 22 (intlist)]
    '('            reduce using rule 20 (charlist)
    '('            [reduce using rule 22 (intlist)]
    $default       reduce using rule 20 (charlist)


State 63

   13 vartypeandlist: KW_BYTE '[' LIT_INTEGER ']' charlist .

    $default  reduce using rule 13 (vartypeandlist)


State 64

   14 vartypeandlist: KW_BYTE '[' LIT_INTEGER ']' intlist .

    $default  reduce using rule 14 (vartypeandlist)


State 65

   22 intlist: ';' .

    $default  reduce using rule 22 (intlist)


State 66

   15 vartypeandlist: KW_SHORT '[' LIT_INTEGER ']' intlist .

    $default  reduce using rule 15 (vartypeandlist)


State 67

   16 vartypeandlist: KW_LONG '[' LIT_INTEGER ']' intlist .

    $default  reduce using rule 16 (vartypeandlist)


State 68

   23 reallist: LIT_REAL . reallist

    LIT_REAL  shift, and go to state 68
    ';'       shift, and go to state 69

    reallist  go to state 77


State 69

   24 reallist: ';' .

    $default  reduce using rule 24 (reallist)


State 70

   17 vartypeandlist: KW_FLOAT '[' LIT_INTEGER ']' reallist .

    $default  reduce using rule 17 (vartypeandlist)


State 71

   18 vartypeandlist: KW_DOUBLE '[' LIT_INTEGER ']' intlist .

    $default  reduce using rule 18 (vartypeandlist)


State 72

   29 argsdef: TK_IDENTIFIER ':' . vartype ',' argsdef
   30        | TK_IDENTIFIER ':' . vartype argsdef

    KW_BYTE    shift, and go to state 9
    KW_SHORT   shift, and go to state 10
    KW_LONG    shift, and go to state 11
    KW_FLOAT   shift, and go to state 12
    KW_DOUBLE  shift, and go to state 13

    vartype  go to state 78


State 73

   25 fundec: '(' vartype ')' TK_IDENTIFIER '(' argsdef ')' . cmd

    KW_IF          shift, and go to state 79
    KW_WHILE       shift, and go to state 80
    KW_READ        shift, and go to state 81
    KW_RETURN      shift, and go to state 82
    KW_PRINT       shift, and go to state 83
    TK_IDENTIFIER  shift, and go to state 84
    '{'            shift, and go to state 85

    TK_IDENTIFIER  [reduce using rule 45 (cmd)]
    $default       reduce using rule 45 (cmd)

    cmd    go to state 86
    atrib  go to state 87
    block  go to state 88


State 74

   21 intlist: LIT_INTEGER intlist .

    $default  reduce using rule 21 (intlist)


State 75

   20 charlist: ';' .

    $default  reduce using rule 20 (charlist)


State 76

   19 charlist: LIT_CHAR charlist .

    $default  reduce using rule 19 (charlist)


State 77

   23 reallist: LIT_REAL reallist .

    $default  reduce using rule 23 (reallist)


State 78

   29 argsdef: TK_IDENTIFIER ':' vartype . ',' argsdef
   30        | TK_IDENTIFIER ':' vartype . argsdef

    TK_IDENTIFIER  shift, and go to state 58
    ','            shift, and go to state 89

    $default  reduce using rule 31 (argsdef)

    argsdef  go to state 90


State 79

   41 cmd: KW_IF . '(' exp ')' KW_THEN cmd KW_ELSE cmd
   42    | KW_IF . '(' exp ')' KW_THEN cmd

    '('  shift, and go to state 91


State 80

   40 cmd: KW_WHILE . '(' exp ')' cmd

    '('  shift, and go to state 92


State 81

   39 cmd: KW_READ . '>' TK_IDENTIFIER

    '>'  shift, and go to state 93


State 82

   43 cmd: KW_RETURN . '(' exp ')'

    '('  shift, and go to state 94


State 83

   38 cmd: KW_PRINT . printargs

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    LIT_STRING     shift, and go to state 99
    '('            shift, and go to state 100

    printargs  go to state 101
    exp        go to state 102


State 84

   50 atrib: TK_IDENTIFIER . '=' exp
   51      | TK_IDENTIFIER . '[' exp ']' '=' exp

    '='  shift, and go to state 103
    '['  shift, and go to state 104


State 85

   73 block: '{' . lcmd '}'

    $default  reduce using rule 75 (lcmd)

    lcmd  go to state 105


State 86

   25 fundec: '(' vartype ')' TK_IDENTIFIER '(' argsdef ')' cmd .

    $default  reduce using rule 25 (fundec)


State 87

   37 cmd: atrib .

    $default  reduce using rule 37 (cmd)


State 88

   44 cmd: block .

    $default  reduce using rule 44 (cmd)


State 89

   29 argsdef: TK_IDENTIFIER ':' vartype ',' . argsdef

    TK_IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 31 (argsdef)

    argsdef  go to state 106


State 90

   30 argsdef: TK_IDENTIFIER ':' vartype argsdef .

    $default  reduce using rule 30 (argsdef)


State 91

   41 cmd: KW_IF '(' . exp ')' KW_THEN cmd KW_ELSE cmd
   42    | KW_IF '(' . exp ')' KW_THEN cmd

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    exp  go to state 107


State 92

   40 cmd: KW_WHILE '(' . exp ')' cmd

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    exp  go to state 108


State 93

   39 cmd: KW_READ '>' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 109


State 94

   43 cmd: KW_RETURN '(' . exp ')'

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    exp  go to state 110


State 95

   53 exp: TK_IDENTIFIER .
   54    | TK_IDENTIFIER . '[' exp ']'
   55    | TK_IDENTIFIER . '(' args ')'

    '['  shift, and go to state 111
    '('  shift, and go to state 112

    '('       [reduce using rule 53 (exp)]
    $default  reduce using rule 53 (exp)


State 96

   56 exp: LIT_INTEGER .

    $default  reduce using rule 56 (exp)


State 97

   58 exp: LIT_REAL .

    $default  reduce using rule 58 (exp)


State 98

   57 exp: LIT_CHAR .

    $default  reduce using rule 57 (exp)


State 99

   46 printargs: LIT_STRING . ',' printargs
   48          | LIT_STRING .

    ','  shift, and go to state 113

    $default  reduce using rule 48 (printargs)


State 100

   52 exp: '(' . exp ')'

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    exp  go to state 114


State 101

   38 cmd: KW_PRINT printargs .

    $default  reduce using rule 38 (cmd)


State 102

   47 printargs: exp . ',' printargs
   49          | exp .
   59 exp: exp . op exp

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    ','           shift, and go to state 121
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    $default  reduce using rule 49 (printargs)

    op  go to state 129


State 103

   50 atrib: TK_IDENTIFIER '=' . exp

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    exp  go to state 130


State 104

   51 atrib: TK_IDENTIFIER '[' . exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    exp  go to state 131


State 105

   73 block: '{' lcmd . '}'
   74 lcmd: lcmd . cmd ';'

    KW_IF          shift, and go to state 79
    KW_WHILE       shift, and go to state 80
    KW_READ        shift, and go to state 81
    KW_RETURN      shift, and go to state 82
    KW_PRINT       shift, and go to state 83
    TK_IDENTIFIER  shift, and go to state 84
    '{'            shift, and go to state 85
    '}'            shift, and go to state 132

    $default  reduce using rule 45 (cmd)

    cmd    go to state 133
    atrib  go to state 87
    block  go to state 88


State 106

   29 argsdef: TK_IDENTIFIER ':' vartype ',' argsdef .

    $default  reduce using rule 29 (argsdef)


State 107

   41 cmd: KW_IF '(' exp . ')' KW_THEN cmd KW_ELSE cmd
   42    | KW_IF '(' exp . ')' KW_THEN cmd
   59 exp: exp . op exp

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    ')'           shift, and go to state 134
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    op  go to state 129


State 108

   40 cmd: KW_WHILE '(' exp . ')' cmd
   59 exp: exp . op exp

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    ')'           shift, and go to state 135
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    op  go to state 129


State 109

   39 cmd: KW_READ '>' TK_IDENTIFIER .

    $default  reduce using rule 39 (cmd)


State 110

   43 cmd: KW_RETURN '(' exp . ')'
   59 exp: exp . op exp

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    ')'           shift, and go to state 136
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    op  go to state 129


State 111

   54 exp: TK_IDENTIFIER '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    exp  go to state 137


State 112

   55 exp: TK_IDENTIFIER '(' . args ')'

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    $default  reduce using rule 28 (args)

    args  go to state 138
    exp   go to state 139


State 113

   46 printargs: LIT_STRING ',' . printargs

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    LIT_STRING     shift, and go to state 99
    '('            shift, and go to state 100

    printargs  go to state 140
    exp        go to state 102


State 114

   52 exp: '(' exp . ')'
   59    | exp . op exp

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    ')'           shift, and go to state 141
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    op  go to state 129


State 115

   60 op: OPERATOR_LE .

    $default  reduce using rule 60 (op)


State 116

   61 op: OPERATOR_GE .

    $default  reduce using rule 61 (op)


State 117

   62 op: OPERATOR_EQ .

    $default  reduce using rule 62 (op)


State 118

   63 op: OPERATOR_NE .

    $default  reduce using rule 63 (op)


State 119

   64 op: OPERATOR_AND .

    $default  reduce using rule 64 (op)


State 120

   65 op: OPERATOR_OR .

    $default  reduce using rule 65 (op)


State 121

   47 printargs: exp ',' . printargs

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    LIT_STRING     shift, and go to state 99
    '('            shift, and go to state 100

    printargs  go to state 142
    exp        go to state 102


State 122

   70 op: '>' .

    $default  reduce using rule 70 (op)


State 123

   66 op: '*' .

    $default  reduce using rule 66 (op)


State 124

   67 op: '/' .

    $default  reduce using rule 67 (op)


State 125

   68 op: '+' .

    $default  reduce using rule 68 (op)


State 126

   69 op: '-' .

    $default  reduce using rule 69 (op)


State 127

   71 op: '<' .

    $default  reduce using rule 71 (op)


State 128

   72 op: '!' .

    $default  reduce using rule 72 (op)


State 129

   59 exp: exp op . exp

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    exp  go to state 143


State 130

   50 atrib: TK_IDENTIFIER '=' exp .
   59 exp: exp . op exp

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    $default  reduce using rule 50 (atrib)

    op  go to state 129


State 131

   51 atrib: TK_IDENTIFIER '[' exp . ']' '=' exp
   59 exp: exp . op exp

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    ']'           shift, and go to state 144
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    op  go to state 129


State 132

   73 block: '{' lcmd '}' .

    $default  reduce using rule 73 (block)


State 133

   74 lcmd: lcmd cmd . ';'

    ';'  shift, and go to state 145


State 134

   41 cmd: KW_IF '(' exp ')' . KW_THEN cmd KW_ELSE cmd
   42    | KW_IF '(' exp ')' . KW_THEN cmd

    KW_THEN  shift, and go to state 146


State 135

   40 cmd: KW_WHILE '(' exp ')' . cmd

    KW_IF          shift, and go to state 79
    KW_WHILE       shift, and go to state 80
    KW_READ        shift, and go to state 81
    KW_RETURN      shift, and go to state 82
    KW_PRINT       shift, and go to state 83
    TK_IDENTIFIER  shift, and go to state 84
    '{'            shift, and go to state 85

    TK_IDENTIFIER  [reduce using rule 45 (cmd)]
    $default       reduce using rule 45 (cmd)

    cmd    go to state 147
    atrib  go to state 87
    block  go to state 88


State 136

   43 cmd: KW_RETURN '(' exp ')' .

    $default  reduce using rule 43 (cmd)


State 137

   54 exp: TK_IDENTIFIER '[' exp . ']'
   59    | exp . op exp

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    ']'           shift, and go to state 148
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    op  go to state 129


State 138

   55 exp: TK_IDENTIFIER '(' args . ')'

    ')'  shift, and go to state 149


State 139

   26 args: exp . ',' args
   27     | exp . args
   59 exp: exp . op exp

    OPERATOR_LE    shift, and go to state 115
    OPERATOR_GE    shift, and go to state 116
    OPERATOR_EQ    shift, and go to state 117
    OPERATOR_NE    shift, and go to state 118
    OPERATOR_AND   shift, and go to state 119
    OPERATOR_OR    shift, and go to state 120
    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100
    ','            shift, and go to state 150
    '>'            shift, and go to state 122
    '*'            shift, and go to state 123
    '/'            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '<'            shift, and go to state 127
    '!'            shift, and go to state 128

    $default  reduce using rule 28 (args)

    args  go to state 151
    exp   go to state 139
    op    go to state 129


State 140

   46 printargs: LIT_STRING ',' printargs .

    $default  reduce using rule 46 (printargs)


State 141

   52 exp: '(' exp ')' .

    $default  reduce using rule 52 (exp)


State 142

   47 printargs: exp ',' printargs .

    $default  reduce using rule 47 (printargs)


State 143

   59 exp: exp . op exp
   59    | exp op exp .

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    OPERATOR_LE   [reduce using rule 59 (exp)]
    OPERATOR_GE   [reduce using rule 59 (exp)]
    OPERATOR_EQ   [reduce using rule 59 (exp)]
    OPERATOR_NE   [reduce using rule 59 (exp)]
    OPERATOR_AND  [reduce using rule 59 (exp)]
    OPERATOR_OR   [reduce using rule 59 (exp)]
    '>'           [reduce using rule 59 (exp)]
    '*'           [reduce using rule 59 (exp)]
    '/'           [reduce using rule 59 (exp)]
    '+'           [reduce using rule 59 (exp)]
    '-'           [reduce using rule 59 (exp)]
    '<'           [reduce using rule 59 (exp)]
    '!'           [reduce using rule 59 (exp)]
    $default      reduce using rule 59 (exp)

    op  go to state 129


State 144

   51 atrib: TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 152


State 145

   74 lcmd: lcmd cmd ';' .

    $default  reduce using rule 74 (lcmd)


State 146

   41 cmd: KW_IF '(' exp ')' KW_THEN . cmd KW_ELSE cmd
   42    | KW_IF '(' exp ')' KW_THEN . cmd

    KW_IF          shift, and go to state 79
    KW_WHILE       shift, and go to state 80
    KW_READ        shift, and go to state 81
    KW_RETURN      shift, and go to state 82
    KW_PRINT       shift, and go to state 83
    TK_IDENTIFIER  shift, and go to state 84
    '{'            shift, and go to state 85

    TK_IDENTIFIER  [reduce using rule 45 (cmd)]
    $default       reduce using rule 45 (cmd)

    cmd    go to state 153
    atrib  go to state 87
    block  go to state 88


State 147

   40 cmd: KW_WHILE '(' exp ')' cmd .

    $default  reduce using rule 40 (cmd)


State 148

   54 exp: TK_IDENTIFIER '[' exp ']' .

    $default  reduce using rule 54 (exp)


State 149

   55 exp: TK_IDENTIFIER '(' args ')' .

    $default  reduce using rule 55 (exp)


State 150

   26 args: exp ',' . args

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    $default  reduce using rule 28 (args)

    args  go to state 154
    exp   go to state 139


State 151

   27 args: exp args .

    $default  reduce using rule 27 (args)


State 152

   51 atrib: TK_IDENTIFIER '[' exp ']' '=' . exp

    TK_IDENTIFIER  shift, and go to state 95
    LIT_INTEGER    shift, and go to state 96
    LIT_REAL       shift, and go to state 97
    LIT_CHAR       shift, and go to state 98
    '('            shift, and go to state 100

    exp  go to state 155


State 153

   41 cmd: KW_IF '(' exp ')' KW_THEN cmd . KW_ELSE cmd
   42    | KW_IF '(' exp ')' KW_THEN cmd .

    KW_ELSE  shift, and go to state 156

    KW_ELSE   [reduce using rule 42 (cmd)]
    $default  reduce using rule 42 (cmd)


State 154

   26 args: exp ',' args .

    $default  reduce using rule 26 (args)


State 155

   51 atrib: TK_IDENTIFIER '[' exp ']' '=' exp .
   59 exp: exp . op exp

    OPERATOR_LE   shift, and go to state 115
    OPERATOR_GE   shift, and go to state 116
    OPERATOR_EQ   shift, and go to state 117
    OPERATOR_NE   shift, and go to state 118
    OPERATOR_AND  shift, and go to state 119
    OPERATOR_OR   shift, and go to state 120
    '>'           shift, and go to state 122
    '*'           shift, and go to state 123
    '/'           shift, and go to state 124
    '+'           shift, and go to state 125
    '-'           shift, and go to state 126
    '<'           shift, and go to state 127
    '!'           shift, and go to state 128

    $default  reduce using rule 51 (atrib)

    op  go to state 129


State 156

   41 cmd: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 79
    KW_WHILE       shift, and go to state 80
    KW_READ        shift, and go to state 81
    KW_RETURN      shift, and go to state 82
    KW_PRINT       shift, and go to state 83
    TK_IDENTIFIER  shift, and go to state 84
    '{'            shift, and go to state 85

    TK_IDENTIFIER  [reduce using rule 45 (cmd)]
    $default       reduce using rule 45 (cmd)

    cmd    go to state 157
    atrib  go to state 87
    block  go to state 88


State 157

   41 cmd: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 41 (cmd)
