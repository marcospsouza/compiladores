Terminals unused in grammar

   KW_FOR
   TOKEN_ERROR


State 69 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce
State 157 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl

    2 decl: dec decl
    3     | %empty

    4 dec: vardec
    5    | fundec

    6 vardec: TK_IDENTIFIER ':' vartypeandlist

    7 vartypeandlist: KW_BYTE '=' lit ';'
    8               | KW_SHORT '=' lit ';'
    9               | KW_LONG '=' lit ';'
   10               | KW_FLOAT '=' lit ';'
   11               | KW_DOUBLE '=' lit ';'
   12               | KW_BYTE '[' LIT_INTEGER ']' litlist
   13               | KW_SHORT '[' LIT_INTEGER ']' litlist
   14               | KW_LONG '[' LIT_INTEGER ']' litlist
   15               | KW_FLOAT '[' LIT_INTEGER ']' litlist
   16               | KW_DOUBLE '[' LIT_INTEGER ']' litlist

   17 lit: LIT_INTEGER
   18    | LIT_REAL
   19    | LIT_CHAR

   20 litlist: lit litlist
   21        | ';'

   22 fundec: '(' vartype ')' TK_IDENTIFIER '(' argsdef ')' cmd

   23 args: exp ',' args
   24     | exp

   25 argsdef: TK_IDENTIFIER ':' vartype ',' argsdef
   26        | TK_IDENTIFIER ':' vartype argsdef
   27        | %empty

   28 vartype: KW_BYTE
   29        | KW_SHORT
   30        | KW_LONG
   31        | KW_FLOAT
   32        | KW_DOUBLE

   33 cmd: atrib
   34    | KW_PRINT printargs
   35    | KW_READ '>' TK_IDENTIFIER
   36    | KW_WHILE '(' exp ')' cmd
   37    | KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd
   38    | KW_IF '(' exp ')' KW_THEN cmd
   39    | KW_RETURN '(' exp ')'
   40    | block
   41    | %empty

   42 printargs: LIT_STRING ',' printargs
   43          | exp ',' printargs
   44          | LIT_STRING
   45          | exp

   46 atrib: TK_IDENTIFIER '=' exp
   47      | TK_IDENTIFIER '[' exp ']' '=' exp

   48 exp: '(' exp ')'
   49    | TK_IDENTIFIER
   50    | TK_IDENTIFIER '[' exp ']'
   51    | TK_IDENTIFIER '(' args ')'
   52    | LIT_INTEGER
   53    | LIT_CHAR
   54    | LIT_REAL
   55    | exp OPERATOR_LE exp
   56    | exp OPERATOR_GE exp
   57    | exp OPERATOR_EQ exp
   58    | exp OPERATOR_NE exp
   59    | exp OPERATOR_AND exp
   60    | exp OPERATOR_OR exp
   61    | exp '*' exp
   62    | exp '/' exp
   63    | exp '+' exp
   64    | exp '-' exp
   65    | exp '>' exp
   66    | exp '<' exp
   67    | exp '!' exp

   68 block: '{' lcmd '}'

   69 lcmd: cmd ';' lcmd
   70     | cmd


Terminals, with rules where they appear

$end (0) 0
'!' (33) 67
'(' (40) 22 36 37 38 39 48 51
')' (41) 22 36 37 38 39 48 51
'*' (42) 61
'+' (43) 63
',' (44) 23 25 42 43
'-' (45) 64
'/' (47) 62
':' (58) 6 25 26
';' (59) 7 8 9 10 11 21 69
'<' (60) 66
'=' (61) 7 8 9 10 11 46 47
'>' (62) 35 65
'[' (91) 12 13 14 15 16 47 50
']' (93) 12 13 14 15 16 47 50
'{' (123) 68
'}' (125) 68
KW_BYTE (256) 7 12 28
KW_SHORT (257) 8 13 29
KW_LONG (258) 9 14 30
KW_FLOAT (259) 10 15 31
KW_DOUBLE (260) 11 16 32
KW_IF (261) 37 38
KW_THEN (262) 37 38
KW_ELSE (263) 37
KW_WHILE (264) 36
KW_FOR (265)
KW_READ (266) 35
KW_RETURN (267) 39
KW_PRINT (268) 34
OPERATOR_LE (270) 55
OPERATOR_GE (271) 56
OPERATOR_EQ (272) 57
OPERATOR_NE (273) 58
OPERATOR_AND (274) 59
OPERATOR_OR (275) 60
TK_IDENTIFIER (280) 6 22 25 26 35 46 47 49 50 51
LIT_INTEGER (281) 12 13 14 15 16 17 52
LIT_REAL (282) 18 54
LIT_CHAR (285) 19 53
LIT_STRING (286) 42 44
TOKEN_ERROR (290)
error (291)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
decl (47)
    on left: 2 3, on right: 1 2
dec (48)
    on left: 4 5, on right: 2
vardec (49)
    on left: 6, on right: 4
vartypeandlist (50)
    on left: 7 8 9 10 11 12 13 14 15 16, on right: 6
lit (51)
    on left: 17 18 19, on right: 7 8 9 10 11 20
litlist (52)
    on left: 20 21, on right: 12 13 14 15 16 20
fundec (53)
    on left: 22, on right: 5
args (54)
    on left: 23 24, on right: 23 51
argsdef (55)
    on left: 25 26 27, on right: 22 25 26
vartype (56)
    on left: 28 29 30 31 32, on right: 22 25 26
cmd (57)
    on left: 33 34 35 36 37 38 39 40 41, on right: 22 36 37 38 69 70
printargs (58)
    on left: 42 43 44 45, on right: 34 42 43
atrib (59)
    on left: 46 47, on right: 33
exp (60)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67, on right: 23 24 36 37 38 39 43 45 46 47 48 50 55 56 57 58
    59 60 61 62 63 64 65 66 67
block (61)
    on left: 68, on right: 40
lcmd (62)
    on left: 69 70, on right: 68 69


State 0

    0 $accept: . program $end

    TK_IDENTIFIER  shift, and go to state 1
    '('            shift, and go to state 2

    $default  reduce using rule 3 (decl)

    program  go to state 3
    decl     go to state 4
    dec      go to state 5
    vardec   go to state 6
    fundec   go to state 7


State 1

    6 vardec: TK_IDENTIFIER . ':' vartypeandlist

    ':'  shift, and go to state 8


State 2

   22 fundec: '(' . vartype ')' TK_IDENTIFIER '(' argsdef ')' cmd

    KW_BYTE    shift, and go to state 9
    KW_SHORT   shift, and go to state 10
    KW_LONG    shift, and go to state 11
    KW_FLOAT   shift, and go to state 12
    KW_DOUBLE  shift, and go to state 13

    vartype  go to state 14


State 3

    0 $accept: program . $end

    $end  shift, and go to state 15


State 4

    1 program: decl .

    $default  reduce using rule 1 (program)


State 5

    2 decl: dec . decl

    TK_IDENTIFIER  shift, and go to state 1
    '('            shift, and go to state 2

    $default  reduce using rule 3 (decl)

    decl    go to state 16
    dec     go to state 5
    vardec  go to state 6
    fundec  go to state 7


State 6

    4 dec: vardec .

    $default  reduce using rule 4 (dec)


State 7

    5 dec: fundec .

    $default  reduce using rule 5 (dec)


State 8

    6 vardec: TK_IDENTIFIER ':' . vartypeandlist

    KW_BYTE    shift, and go to state 17
    KW_SHORT   shift, and go to state 18
    KW_LONG    shift, and go to state 19
    KW_FLOAT   shift, and go to state 20
    KW_DOUBLE  shift, and go to state 21

    vartypeandlist  go to state 22


State 9

   28 vartype: KW_BYTE .

    $default  reduce using rule 28 (vartype)


State 10

   29 vartype: KW_SHORT .

    $default  reduce using rule 29 (vartype)


State 11

   30 vartype: KW_LONG .

    $default  reduce using rule 30 (vartype)


State 12

   31 vartype: KW_FLOAT .

    $default  reduce using rule 31 (vartype)


State 13

   32 vartype: KW_DOUBLE .

    $default  reduce using rule 32 (vartype)


State 14

   22 fundec: '(' vartype . ')' TK_IDENTIFIER '(' argsdef ')' cmd

    ')'  shift, and go to state 23


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 decl: dec decl .

    $default  reduce using rule 2 (decl)


State 17

    7 vartypeandlist: KW_BYTE . '=' lit ';'
   12               | KW_BYTE . '[' LIT_INTEGER ']' litlist

    '='  shift, and go to state 24
    '['  shift, and go to state 25


State 18

    8 vartypeandlist: KW_SHORT . '=' lit ';'
   13               | KW_SHORT . '[' LIT_INTEGER ']' litlist

    '='  shift, and go to state 26
    '['  shift, and go to state 27


State 19

    9 vartypeandlist: KW_LONG . '=' lit ';'
   14               | KW_LONG . '[' LIT_INTEGER ']' litlist

    '='  shift, and go to state 28
    '['  shift, and go to state 29


State 20

   10 vartypeandlist: KW_FLOAT . '=' lit ';'
   15               | KW_FLOAT . '[' LIT_INTEGER ']' litlist

    '='  shift, and go to state 30
    '['  shift, and go to state 31


State 21

   11 vartypeandlist: KW_DOUBLE . '=' lit ';'
   16               | KW_DOUBLE . '[' LIT_INTEGER ']' litlist

    '='  shift, and go to state 32
    '['  shift, and go to state 33


State 22

    6 vardec: TK_IDENTIFIER ':' vartypeandlist .

    $default  reduce using rule 6 (vardec)


State 23

   22 fundec: '(' vartype ')' . TK_IDENTIFIER '(' argsdef ')' cmd

    TK_IDENTIFIER  shift, and go to state 34


State 24

    7 vartypeandlist: KW_BYTE '=' . lit ';'

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37

    lit  go to state 38


State 25

   12 vartypeandlist: KW_BYTE '[' . LIT_INTEGER ']' litlist

    LIT_INTEGER  shift, and go to state 39


State 26

    8 vartypeandlist: KW_SHORT '=' . lit ';'

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37

    lit  go to state 40


State 27

   13 vartypeandlist: KW_SHORT '[' . LIT_INTEGER ']' litlist

    LIT_INTEGER  shift, and go to state 41


State 28

    9 vartypeandlist: KW_LONG '=' . lit ';'

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37

    lit  go to state 42


State 29

   14 vartypeandlist: KW_LONG '[' . LIT_INTEGER ']' litlist

    LIT_INTEGER  shift, and go to state 43


State 30

   10 vartypeandlist: KW_FLOAT '=' . lit ';'

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37

    lit  go to state 44


State 31

   15 vartypeandlist: KW_FLOAT '[' . LIT_INTEGER ']' litlist

    LIT_INTEGER  shift, and go to state 45


State 32

   11 vartypeandlist: KW_DOUBLE '=' . lit ';'

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37

    lit  go to state 46


State 33

   16 vartypeandlist: KW_DOUBLE '[' . LIT_INTEGER ']' litlist

    LIT_INTEGER  shift, and go to state 47


State 34

   22 fundec: '(' vartype ')' TK_IDENTIFIER . '(' argsdef ')' cmd

    '('  shift, and go to state 48


State 35

   17 lit: LIT_INTEGER .

    $default  reduce using rule 17 (lit)


State 36

   18 lit: LIT_REAL .

    $default  reduce using rule 18 (lit)


State 37

   19 lit: LIT_CHAR .

    $default  reduce using rule 19 (lit)


State 38

    7 vartypeandlist: KW_BYTE '=' lit . ';'

    ';'  shift, and go to state 49


State 39

   12 vartypeandlist: KW_BYTE '[' LIT_INTEGER . ']' litlist

    ']'  shift, and go to state 50


State 40

    8 vartypeandlist: KW_SHORT '=' lit . ';'

    ';'  shift, and go to state 51


State 41

   13 vartypeandlist: KW_SHORT '[' LIT_INTEGER . ']' litlist

    ']'  shift, and go to state 52


State 42

    9 vartypeandlist: KW_LONG '=' lit . ';'

    ';'  shift, and go to state 53


State 43

   14 vartypeandlist: KW_LONG '[' LIT_INTEGER . ']' litlist

    ']'  shift, and go to state 54


State 44

   10 vartypeandlist: KW_FLOAT '=' lit . ';'

    ';'  shift, and go to state 55


State 45

   15 vartypeandlist: KW_FLOAT '[' LIT_INTEGER . ']' litlist

    ']'  shift, and go to state 56


State 46

   11 vartypeandlist: KW_DOUBLE '=' lit . ';'

    ';'  shift, and go to state 57


State 47

   16 vartypeandlist: KW_DOUBLE '[' LIT_INTEGER . ']' litlist

    ']'  shift, and go to state 58


State 48

   22 fundec: '(' vartype ')' TK_IDENTIFIER '(' . argsdef ')' cmd

    TK_IDENTIFIER  shift, and go to state 59

    $default  reduce using rule 27 (argsdef)

    argsdef  go to state 60


State 49

    7 vartypeandlist: KW_BYTE '=' lit ';' .

    $default  reduce using rule 7 (vartypeandlist)


State 50

   12 vartypeandlist: KW_BYTE '[' LIT_INTEGER ']' . litlist

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37
    ';'          shift, and go to state 61

    lit      go to state 62
    litlist  go to state 63


State 51

    8 vartypeandlist: KW_SHORT '=' lit ';' .

    $default  reduce using rule 8 (vartypeandlist)


State 52

   13 vartypeandlist: KW_SHORT '[' LIT_INTEGER ']' . litlist

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37
    ';'          shift, and go to state 61

    lit      go to state 62
    litlist  go to state 64


State 53

    9 vartypeandlist: KW_LONG '=' lit ';' .

    $default  reduce using rule 9 (vartypeandlist)


State 54

   14 vartypeandlist: KW_LONG '[' LIT_INTEGER ']' . litlist

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37
    ';'          shift, and go to state 61

    lit      go to state 62
    litlist  go to state 65


State 55

   10 vartypeandlist: KW_FLOAT '=' lit ';' .

    $default  reduce using rule 10 (vartypeandlist)


State 56

   15 vartypeandlist: KW_FLOAT '[' LIT_INTEGER ']' . litlist

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37
    ';'          shift, and go to state 61

    lit      go to state 62
    litlist  go to state 66


State 57

   11 vartypeandlist: KW_DOUBLE '=' lit ';' .

    $default  reduce using rule 11 (vartypeandlist)


State 58

   16 vartypeandlist: KW_DOUBLE '[' LIT_INTEGER ']' . litlist

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37
    ';'          shift, and go to state 61

    lit      go to state 62
    litlist  go to state 67


State 59

   25 argsdef: TK_IDENTIFIER . ':' vartype ',' argsdef
   26        | TK_IDENTIFIER . ':' vartype argsdef

    ':'  shift, and go to state 68


State 60

   22 fundec: '(' vartype ')' TK_IDENTIFIER '(' argsdef . ')' cmd

    ')'  shift, and go to state 69


State 61

   21 litlist: ';' .

    $default  reduce using rule 21 (litlist)


State 62

   20 litlist: lit . litlist

    LIT_INTEGER  shift, and go to state 35
    LIT_REAL     shift, and go to state 36
    LIT_CHAR     shift, and go to state 37
    ';'          shift, and go to state 61

    lit      go to state 62
    litlist  go to state 70


State 63

   12 vartypeandlist: KW_BYTE '[' LIT_INTEGER ']' litlist .

    $default  reduce using rule 12 (vartypeandlist)


State 64

   13 vartypeandlist: KW_SHORT '[' LIT_INTEGER ']' litlist .

    $default  reduce using rule 13 (vartypeandlist)


State 65

   14 vartypeandlist: KW_LONG '[' LIT_INTEGER ']' litlist .

    $default  reduce using rule 14 (vartypeandlist)


State 66

   15 vartypeandlist: KW_FLOAT '[' LIT_INTEGER ']' litlist .

    $default  reduce using rule 15 (vartypeandlist)


State 67

   16 vartypeandlist: KW_DOUBLE '[' LIT_INTEGER ']' litlist .

    $default  reduce using rule 16 (vartypeandlist)


State 68

   25 argsdef: TK_IDENTIFIER ':' . vartype ',' argsdef
   26        | TK_IDENTIFIER ':' . vartype argsdef

    KW_BYTE    shift, and go to state 9
    KW_SHORT   shift, and go to state 10
    KW_LONG    shift, and go to state 11
    KW_FLOAT   shift, and go to state 12
    KW_DOUBLE  shift, and go to state 13

    vartype  go to state 71


State 69

   22 fundec: '(' vartype ')' TK_IDENTIFIER '(' argsdef ')' . cmd

    KW_IF          shift, and go to state 72
    KW_WHILE       shift, and go to state 73
    KW_READ        shift, and go to state 74
    KW_RETURN      shift, and go to state 75
    KW_PRINT       shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    '{'            shift, and go to state 78

    TK_IDENTIFIER  [reduce using rule 41 (cmd)]
    $default       reduce using rule 41 (cmd)

    cmd    go to state 79
    atrib  go to state 80
    block  go to state 81


State 70

   20 litlist: lit litlist .

    $default  reduce using rule 20 (litlist)


State 71

   25 argsdef: TK_IDENTIFIER ':' vartype . ',' argsdef
   26        | TK_IDENTIFIER ':' vartype . argsdef

    TK_IDENTIFIER  shift, and go to state 59
    ','            shift, and go to state 82

    $default  reduce using rule 27 (argsdef)

    argsdef  go to state 83


State 72

   37 cmd: KW_IF . '(' exp ')' KW_THEN cmd KW_ELSE cmd
   38    | KW_IF . '(' exp ')' KW_THEN cmd

    '('  shift, and go to state 84


State 73

   36 cmd: KW_WHILE . '(' exp ')' cmd

    '('  shift, and go to state 85


State 74

   35 cmd: KW_READ . '>' TK_IDENTIFIER

    '>'  shift, and go to state 86


State 75

   39 cmd: KW_RETURN . '(' exp ')'

    '('  shift, and go to state 87


State 76

   34 cmd: KW_PRINT . printargs

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    LIT_STRING     shift, and go to state 92
    '('            shift, and go to state 93

    printargs  go to state 94
    exp        go to state 95


State 77

   46 atrib: TK_IDENTIFIER . '=' exp
   47      | TK_IDENTIFIER . '[' exp ']' '=' exp

    '='  shift, and go to state 96
    '['  shift, and go to state 97


State 78

   68 block: '{' . lcmd '}'

    KW_IF          shift, and go to state 72
    KW_WHILE       shift, and go to state 73
    KW_READ        shift, and go to state 74
    KW_RETURN      shift, and go to state 75
    KW_PRINT       shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    '{'            shift, and go to state 78

    $default  reduce using rule 41 (cmd)

    cmd    go to state 98
    atrib  go to state 80
    block  go to state 81
    lcmd   go to state 99


State 79

   22 fundec: '(' vartype ')' TK_IDENTIFIER '(' argsdef ')' cmd .

    $default  reduce using rule 22 (fundec)


State 80

   33 cmd: atrib .

    $default  reduce using rule 33 (cmd)


State 81

   40 cmd: block .

    $default  reduce using rule 40 (cmd)


State 82

   25 argsdef: TK_IDENTIFIER ':' vartype ',' . argsdef

    TK_IDENTIFIER  shift, and go to state 59

    $default  reduce using rule 27 (argsdef)

    argsdef  go to state 100


State 83

   26 argsdef: TK_IDENTIFIER ':' vartype argsdef .

    $default  reduce using rule 26 (argsdef)


State 84

   37 cmd: KW_IF '(' . exp ')' KW_THEN cmd KW_ELSE cmd
   38    | KW_IF '(' . exp ')' KW_THEN cmd

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 101


State 85

   36 cmd: KW_WHILE '(' . exp ')' cmd

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 102


State 86

   35 cmd: KW_READ '>' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 103


State 87

   39 cmd: KW_RETURN '(' . exp ')'

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 104


State 88

   49 exp: TK_IDENTIFIER .
   50    | TK_IDENTIFIER . '[' exp ']'
   51    | TK_IDENTIFIER . '(' args ')'

    '['  shift, and go to state 105
    '('  shift, and go to state 106

    '('       [reduce using rule 49 (exp)]
    $default  reduce using rule 49 (exp)


State 89

   52 exp: LIT_INTEGER .

    $default  reduce using rule 52 (exp)


State 90

   54 exp: LIT_REAL .

    $default  reduce using rule 54 (exp)


State 91

   53 exp: LIT_CHAR .

    $default  reduce using rule 53 (exp)


State 92

   42 printargs: LIT_STRING . ',' printargs
   44          | LIT_STRING .

    ','  shift, and go to state 107

    $default  reduce using rule 44 (printargs)


State 93

   48 exp: '(' . exp ')'

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 108


State 94

   34 cmd: KW_PRINT printargs .

    $default  reduce using rule 34 (cmd)


State 95

   43 printargs: exp . ',' printargs
   45          | exp .
   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ','           shift, and go to state 122

    $default  reduce using rule 45 (printargs)


State 96

   46 atrib: TK_IDENTIFIER '=' . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 123


State 97

   47 atrib: TK_IDENTIFIER '[' . exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 124


State 98

   69 lcmd: cmd . ';' lcmd
   70     | cmd .

    ';'  shift, and go to state 125

    $default  reduce using rule 70 (lcmd)


State 99

   68 block: '{' lcmd . '}'

    '}'  shift, and go to state 126


State 100

   25 argsdef: TK_IDENTIFIER ':' vartype ',' argsdef .

    $default  reduce using rule 25 (argsdef)


State 101

   37 cmd: KW_IF '(' exp . ')' KW_THEN cmd KW_ELSE cmd
   38    | KW_IF '(' exp . ')' KW_THEN cmd
   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ')'           shift, and go to state 127


State 102

   36 cmd: KW_WHILE '(' exp . ')' cmd
   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ')'           shift, and go to state 128


State 103

   35 cmd: KW_READ '>' TK_IDENTIFIER .

    $default  reduce using rule 35 (cmd)


State 104

   39 cmd: KW_RETURN '(' exp . ')'
   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ')'           shift, and go to state 129


State 105

   50 exp: TK_IDENTIFIER '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 130


State 106

   51 exp: TK_IDENTIFIER '(' . args ')'

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    args  go to state 131
    exp   go to state 132


State 107

   42 printargs: LIT_STRING ',' . printargs

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    LIT_STRING     shift, and go to state 92
    '('            shift, and go to state 93

    printargs  go to state 133
    exp        go to state 95


State 108

   48 exp: '(' exp . ')'
   55    | exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ')'           shift, and go to state 134


State 109

   55 exp: exp OPERATOR_LE . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 135


State 110

   56 exp: exp OPERATOR_GE . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 136


State 111

   57 exp: exp OPERATOR_EQ . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 137


State 112

   58 exp: exp OPERATOR_NE . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 138


State 113

   59 exp: exp OPERATOR_AND . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 139


State 114

   60 exp: exp OPERATOR_OR . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 140


State 115

   67 exp: exp '!' . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 141


State 116

   66 exp: exp '<' . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 142


State 117

   65 exp: exp '>' . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 143


State 118

   63 exp: exp '+' . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 144


State 119

   64 exp: exp '-' . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 145


State 120

   61 exp: exp '*' . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 146


State 121

   62 exp: exp '/' . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 147


State 122

   43 printargs: exp ',' . printargs

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    LIT_STRING     shift, and go to state 92
    '('            shift, and go to state 93

    printargs  go to state 148
    exp        go to state 95


State 123

   46 atrib: TK_IDENTIFIER '=' exp .
   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121

    $default  reduce using rule 46 (atrib)


State 124

   47 atrib: TK_IDENTIFIER '[' exp . ']' '=' exp
   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ']'           shift, and go to state 149


State 125

   69 lcmd: cmd ';' . lcmd

    KW_IF          shift, and go to state 72
    KW_WHILE       shift, and go to state 73
    KW_READ        shift, and go to state 74
    KW_RETURN      shift, and go to state 75
    KW_PRINT       shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    '{'            shift, and go to state 78

    $default  reduce using rule 41 (cmd)

    cmd    go to state 98
    atrib  go to state 80
    block  go to state 81
    lcmd   go to state 150


State 126

   68 block: '{' lcmd '}' .

    $default  reduce using rule 68 (block)


State 127

   37 cmd: KW_IF '(' exp ')' . KW_THEN cmd KW_ELSE cmd
   38    | KW_IF '(' exp ')' . KW_THEN cmd

    KW_THEN  shift, and go to state 151


State 128

   36 cmd: KW_WHILE '(' exp ')' . cmd

    KW_IF          shift, and go to state 72
    KW_WHILE       shift, and go to state 73
    KW_READ        shift, and go to state 74
    KW_RETURN      shift, and go to state 75
    KW_PRINT       shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    '{'            shift, and go to state 78

    TK_IDENTIFIER  [reduce using rule 41 (cmd)]
    $default       reduce using rule 41 (cmd)

    cmd    go to state 152
    atrib  go to state 80
    block  go to state 81


State 129

   39 cmd: KW_RETURN '(' exp ')' .

    $default  reduce using rule 39 (cmd)


State 130

   50 exp: TK_IDENTIFIER '[' exp . ']'
   55    | exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ']'           shift, and go to state 153


State 131

   51 exp: TK_IDENTIFIER '(' args . ')'

    ')'  shift, and go to state 154


State 132

   23 args: exp . ',' args
   24     | exp .
   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ','           shift, and go to state 155

    $default  reduce using rule 24 (args)


State 133

   42 printargs: LIT_STRING ',' printargs .

    $default  reduce using rule 42 (printargs)


State 134

   48 exp: '(' exp ')' .

    $default  reduce using rule 48 (exp)


State 135

   55 exp: exp . OPERATOR_LE exp
   55    | exp OPERATOR_LE exp .
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119
    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 55 (exp)


State 136

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   56    | exp OPERATOR_GE exp .
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119
    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 56 (exp)


State 137

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   57    | exp OPERATOR_EQ exp .
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119
    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 57 (exp)


State 138

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   58    | exp OPERATOR_NE exp .
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119
    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 58 (exp)


State 139

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   59    | exp OPERATOR_AND exp .
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE  shift, and go to state 109
    OPERATOR_GE  shift, and go to state 110
    OPERATOR_EQ  shift, and go to state 111
    OPERATOR_NE  shift, and go to state 112
    '<'          shift, and go to state 116
    '>'          shift, and go to state 117
    '+'          shift, and go to state 118
    '-'          shift, and go to state 119
    '*'          shift, and go to state 120
    '/'          shift, and go to state 121

    $default  reduce using rule 59 (exp)


State 140

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   60    | exp OPERATOR_OR exp .
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE  shift, and go to state 109
    OPERATOR_GE  shift, and go to state 110
    OPERATOR_EQ  shift, and go to state 111
    OPERATOR_NE  shift, and go to state 112
    '<'          shift, and go to state 116
    '>'          shift, and go to state 117
    '+'          shift, and go to state 118
    '-'          shift, and go to state 119
    '*'          shift, and go to state 120
    '/'          shift, and go to state 121

    $default  reduce using rule 60 (exp)


State 141

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp
   67    | exp '!' exp .

    OPERATOR_LE  shift, and go to state 109
    OPERATOR_GE  shift, and go to state 110
    OPERATOR_EQ  shift, and go to state 111
    OPERATOR_NE  shift, and go to state 112
    '<'          shift, and go to state 116
    '>'          shift, and go to state 117
    '+'          shift, and go to state 118
    '-'          shift, and go to state 119
    '*'          shift, and go to state 120
    '/'          shift, and go to state 121

    $default  reduce using rule 67 (exp)


State 142

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   66    | exp '<' exp .
   67    | exp . '!' exp

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119
    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 66 (exp)


State 143

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   65    | exp '>' exp .
   66    | exp . '<' exp
   67    | exp . '!' exp

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119
    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 65 (exp)


State 144

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   63    | exp '+' exp .
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 63 (exp)


State 145

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   64    | exp '-' exp .
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 64 (exp)


State 146

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   61    | exp '*' exp .
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    $default  reduce using rule 61 (exp)


State 147

   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   62    | exp '/' exp .
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    $default  reduce using rule 62 (exp)


State 148

   43 printargs: exp ',' printargs .

    $default  reduce using rule 43 (printargs)


State 149

   47 atrib: TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 156


State 150

   69 lcmd: cmd ';' lcmd .

    $default  reduce using rule 69 (lcmd)


State 151

   37 cmd: KW_IF '(' exp ')' KW_THEN . cmd KW_ELSE cmd
   38    | KW_IF '(' exp ')' KW_THEN . cmd

    KW_IF          shift, and go to state 72
    KW_WHILE       shift, and go to state 73
    KW_READ        shift, and go to state 74
    KW_RETURN      shift, and go to state 75
    KW_PRINT       shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    '{'            shift, and go to state 78

    TK_IDENTIFIER  [reduce using rule 41 (cmd)]
    $default       reduce using rule 41 (cmd)

    cmd    go to state 157
    atrib  go to state 80
    block  go to state 81


State 152

   36 cmd: KW_WHILE '(' exp ')' cmd .

    $default  reduce using rule 36 (cmd)


State 153

   50 exp: TK_IDENTIFIER '[' exp ']' .

    $default  reduce using rule 50 (exp)


State 154

   51 exp: TK_IDENTIFIER '(' args ')' .

    $default  reduce using rule 51 (exp)


State 155

   23 args: exp ',' . args

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    args  go to state 158
    exp   go to state 132


State 156

   47 atrib: TK_IDENTIFIER '[' exp ']' '=' . exp

    TK_IDENTIFIER  shift, and go to state 88
    LIT_INTEGER    shift, and go to state 89
    LIT_REAL       shift, and go to state 90
    LIT_CHAR       shift, and go to state 91
    '('            shift, and go to state 93

    exp  go to state 159


State 157

   37 cmd: KW_IF '(' exp ')' KW_THEN cmd . KW_ELSE cmd
   38    | KW_IF '(' exp ')' KW_THEN cmd .

    KW_ELSE  shift, and go to state 160

    KW_ELSE   [reduce using rule 38 (cmd)]
    $default  reduce using rule 38 (cmd)


State 158

   23 args: exp ',' args .

    $default  reduce using rule 23 (args)


State 159

   47 atrib: TK_IDENTIFIER '[' exp ']' '=' exp .
   55 exp: exp . OPERATOR_LE exp
   56    | exp . OPERATOR_GE exp
   57    | exp . OPERATOR_EQ exp
   58    | exp . OPERATOR_NE exp
   59    | exp . OPERATOR_AND exp
   60    | exp . OPERATOR_OR exp
   61    | exp . '*' exp
   62    | exp . '/' exp
   63    | exp . '+' exp
   64    | exp . '-' exp
   65    | exp . '>' exp
   66    | exp . '<' exp
   67    | exp . '!' exp

    OPERATOR_LE   shift, and go to state 109
    OPERATOR_GE   shift, and go to state 110
    OPERATOR_EQ   shift, and go to state 111
    OPERATOR_NE   shift, and go to state 112
    OPERATOR_AND  shift, and go to state 113
    OPERATOR_OR   shift, and go to state 114
    '!'           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '+'           shift, and go to state 118
    '-'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121

    $default  reduce using rule 47 (atrib)


State 160

   37 cmd: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 72
    KW_WHILE       shift, and go to state 73
    KW_READ        shift, and go to state 74
    KW_RETURN      shift, and go to state 75
    KW_PRINT       shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    '{'            shift, and go to state 78

    TK_IDENTIFIER  [reduce using rule 41 (cmd)]
    $default       reduce using rule 41 (cmd)

    cmd    go to state 161
    atrib  go to state 80
    block  go to state 81


State 161

   37 cmd: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 37 (cmd)
